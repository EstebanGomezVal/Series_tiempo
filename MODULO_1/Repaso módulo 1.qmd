---
title: "Repaso módulo 1"
author: "Mónica Ibarra 750601
         Priscila Cervantes 750722
         Esteban Valerio 751178 "
format: html
editor: visual
---

## Packages

```{r}
library(tidyverse)
library(tsibble)
library(feasts)
library(fable)
library(tsibbledata)
library(fpp3)
library(plotly)
```

## Import data

```{r}
gdp <- tidyquant::tq_get(
  x    = "NGDPRNSAXDCMXQ",
  get  = "economic.data",
  from = "1997-01-01"
)

gdp
```

```{r}
gdp <- gdp |> 
  mutate(date = yearquarter(date)) |> 
  as_tsibble(
    index = date,
    key   = symbol
  )

gdp
```

## Train/Test Split

```{r}
gdp_train <- gdp |> 
  filter_index(. ~ "2021 Q4")

gdp_train
```

## Visualization

```{r}
p <- gdp_train |> 
  autoplot(price) +
  labs(
    title = "Time series plot of the Real GDP for Mexico",
    y = "GDP"
  )
 
ggplotly(p, dynamicTicks = TRUE) |> 
  rangeslider()
```

La gráfica muestra una tendencia a la alta, con una fuerte estacionalidad.

## Cubic root transformation of train

```{r}
gdp_train |> 
  autoplot((price)^(1/3)) +
  ggtitle(" Cubic Transformation of the Real GDP of Mexico")
```

Se realizó una transformación cúbica a la variable de 'price' para estabilizar la varianza y para que los residuales sean más estables.

## Model Specification

```{r}
library(dplyr)

gdp_train <- gdp_train |> mutate(price_trans = price^(1/3))

gdp_fit <- gdp_train |> 
  model(
      stl_trans = 
      decomposition_model( 
       STL(price_trans ~ season(window = "periodic"), robust = TRUE),
       RW(season_adjust ~ drift())
       ## SNAIVE para estacionalidad, no se pone porque es automático
    ))

gdp_fit
```

Se propuso como modelo una descomposición STL, usando SNAIVE para capturar la estacionalidad y drift con caminata aleatoria para la tendencia, así como que el modelo sea robusto a valores atípicos o outliers. Aplicamos de igual manera la transformación raiz cúbica para mejorar el rendimiento del modelo y reducir los errores al hacer pronósticos.

```{r}
gdp <- gdp |> mutate(price_trans = price^(1/3))

```

## Residuals Diagnostics

```{r}
gdp_fit |> 
  select(stl_trans) |> 
  gg_tsresiduals() +
  ggtitle("Residuals Diagnostics for the Model")
```

Se puede visualizar en la gráfica que el primer residual sale de los intervalos de confianza por lo que indica que están correlacionados, también la gráfica muestra que los resiudales no tienen una distribución normal.

## Métricas de error

```{r}
gdp_train_accu <- accuracy(gdp_fit) |> 
  arrange(MAPE)
gdp_train_accu |> 
  select(symbol:.type, MAPE, RMSE, MAE, MASE)
```

La métrica de error en la que nos estamos centrando es en el 'MAPE', como podemos ver el MAPE del conjunto de entrenamiento del modelo es de 0.5582

## Forecasting on the test set

```{r}
gdp_fc <- gdp_fit |> 
  forecast(h = 12) 

gdp_fc
```

Hicimos un pronóstico de cómo será el PIB de México en 12 meses.

## Transformación inversa para el pronóstico

```{r}
gdp_fc <- gdp_fc |> mutate(price = price_trans^3)
```

Como se hizo una transformación raíz cúbica, se tiene que aplicar una transformación inversa al hacer los pronósticos, es decir elevar al cubo la variable de 'price'

```{r}
gdp_fc |> 
  filter(.model == "stl_trans") |> 
  autoplot(gdp)
```

Esta gráfica muestra el pronóstico a 12 meses

## Forecasting the future

```{r}
gdp_fit2 <- gdp |> 
  model(
      stl_trans = 
      decomposition_model( 
       STL(price_trans ~ season(window = "periodic"), robust = TRUE),
       RW(season_adjust ~ drift())
       ## SNAIVE para estacionalidad, no se pone porque es automático
    ))
gdp_fit2
```

```{r}
gdp_fc_fut <- gdp_fit2 |> 
  forecast(h = 12)
gdp_fc_fut
```

```{r}
gdp_fc_fut |> 
  autoplot(gdp)
```

Se puede ver los pronósticos generales del modelo a 12 meses.

## Métricas de error Test

```{r}
gdp_fc |> 
  accuracy(gdp) |> 
  select(.model:.type, MAPE, RMSE, MAE, MASE) |> 
  arrange(MAPE)
```

El MAPE del conjunto de prueba es de 0.7364, por lo cual el modelo tiene un buen rendimiento, superando a los modelos propuestos en clase.
